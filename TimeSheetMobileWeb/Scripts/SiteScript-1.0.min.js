(function () { var b = "_configuration_"; var e = "_user_"; var d = "_task_"; var c = "_row_"; var a = "_updated_"; window.configuration = { show: function () { var f = getCookie(b, true); alert("task view: " + f[d] + " row view: " + f[c] + " user: " + f[e] + " updated: " + f[a]) }, set: function (h, f) { var g = getCookie(b, true); g[d] = f || ""; g[c] = h || ""; g[a] = "true"; setCookie(b, g, true, 365) }, get: function () { var f = getCookie(b, true); return { task: f[d] || "", row: f[c] || ""} } } })(); function TSM_ChangePage(d, b, a) { var c = { cancel: false, action: a }; $("#" + d).trigger("gotoing", c); if (!c.cancel) { $.mobile.changePage("#" + d, b) } $("#" + d).trigger("goto", c) } function TSM_Return(e, b, c, a) { var d = { cancel: false, action: a }; $("#" + e).trigger(c + "ing", d); if (!d.cancel) { history.back() } $("#" + e).trigger(c, d) } function TSM_LeaveTo(d, b, a) { var c = { cancel: false }; $("#" + b).trigger("leaveApplication", c); if (c.cancel) { return } window.location.href = d } function TSM_partialSubmit(jForm) { var target = $("#" + jForm.attr("data-ajax-target")); $.mobile.showPageLoadingMsg(); $.post(jForm.attr("data-ajax-url"), jForm.serialize(), function (data) { target.html(data); $.validator.unobtrusive.reParse(target); TSM_initButtons(TSM_PageChangeOptions); var onComplete = jForm.attr("data-ajax-oncomplete") || null; if (onComplete != null) { onComplete = eval(onComplete); onComplete() } $.mobile.hidePageLoadingMsg() }) } function TSM_jsonSubmit(jForm) { $.mobile.showPageLoadingMsg(); $.post(jForm.attr("data-ajax-url"), jForm.serialize(), function (data) { var onComplete = jForm.attr("data-ajax-oncomplete") || null; if (onComplete != null) { onComplete = eval(onComplete); onComplete($.parseJSON(data)); $.mobile.hidePageLoadingMsg() } }, "text") } function TSM_formDirty(a, f) { f = f || "mainform"; var b = ($(".currtotalact").length != 0) && ($(".candelete").val() != "True"); var c = $("#" + f); c.data("_dirty_", a); c.trigger("dirtychange", a); var e = ($(".currentperiodid").val() || "") == ""; var d = false; $(".csubmit-" + f).prop("disabled", (!a) || d || b); $(".fsubmit-" + f).prop("disabled", d || e || b); $("#btnRecall").prop("disabled", e || $(".canrecall").val() != "True"); $("#btnDelete").prop("disabled", e || $(".candelete").val() != "True"); $("#btnRecallDelete").prop("disabled", e); $("#currstatusdisplay").text($(".currstatus").val()) } function TSM_formDelete(b) { b = b || "mainform"; var a = $(".innerRowsContainer").children().length == 0; if (a) { $(".csubmit-" + b).prop("disabled", true) } $(".fsubmit-" + b).prop("disabled", a) } function TSM_isFormDirty(a) { a = a || "mainform"; return $("#" + a).data("_dirty_") || false } function TSM_prepareDatePicker(b) { var g = null; var k = null; var f = b.attr("data-val-daterange-max") || ""; if (f != "") { k = new Date(parseInt(f)) } var a = b.attr("data-val-daterange-min") || ""; if (a != "") { g = new Date(parseInt(a)) } var l = b.attr("data-val-clientdynamicdaterange-max") || ""; var i = b.attr("data-val-clientdynamicdaterange-min") || ""; var j = b.attr("data-val-clientdynamicdaterange-mindelay") || ""; var e = b.attr("data-val-clientdynamicdaterange-maxdelay") || ""; if (l != "") { l = $.validator.takeDynamicValue(b[0], l); if (l != null) { l = jQuery.global.parseDate(l); if (!isNaN(l)) { if (e != "") { l = new Date(l.getTime() + parseInt(e)) } if (k != null) { if (l < k) { k = l } } else { k = l } } } } if (i != "") { i = $.validator.takeDynamicValue(b[0], i); if (i != null) { i = jQuery.global.parseDate(i); if (!isNaN(i)) { if (j != "") { i = new Date(i.getTime() + parseInt(j)) } if (g != null) { if (i > g) { g = i } } else { g = i } } } } var d = jQuery.global.parseDate(b.val()); var c = null; if (d == null || isNaN(d)) { d = null; c = new Date(); if (g != null && c < g) { c = g } if (k != null && c > k) { c = k } } else { if (g != null && d < g) { d = g } if (k != null && d > k) { d = k } c = d } var h = $(".datapickerwidget"); h.datepicker("option", { minDate: g, maxDate: k, defaultDate: c, gotoCurrent: true }); h.datepicker("setDate", c) } function TSM_initButtons(a) { function b(c) { c.preventDefault(); c.stopImmediatePropagation(); if (($(this).attr("data-rel") || "") == "dialog") { a = $.extend({}, a); a.changeHash = false } else { a = $.extend({}, a); a.changeHash = true } if ($(this).hasClass("ui-disabled")) { return } TSM_ChangePage($(this).attr("data-button-target"), a, c.target) } $(".datapickerwidget").datepicker({ onSelect: function (d, c) { $("#dateinput").trigger("dateselected", d); history.back() } }); $("a.datepicker").click(function (f) { f.preventDefault(); f.stopImmediatePropagation(); if ($(this).hasClass("ui-disabled")) { return } $("#dateinput").data("_returnNode_", this); var c = $(this).attr("id"); c = c.substring(0, c.lastIndexOf("_")); var d = $("#" + c); TSM_prepareDatePicker(d); $.mobile.changePage("#dateinput", a) }); $(".submit").click(function (g) { g.preventDefault(); g.stopImmediatePropagation(); if ($(this).hasClass("ui-disabled")) { return } jThis = $(this); var d = jThis.attr("data-action-confirm"); if (d && !window.confirm(d)) { return } var f = $("#" + jThis.attr("data-action-container")); f.val(jThis.attr("data-action-value")); var c = f.parents("form").first(); if (c.validate().form()) { TSM_partialSubmit(c) } }); $(".goto").click(b); $(".confirm").click(function (c) { c.preventDefault(); c.stopImmediatePropagation(); if ($(this).hasClass("ui-disabled")) { return } TSM_Return($(this).attr("data-button-target"), a, "confirm", c.target) }); $(".loadConfirm").click(function (c) { c.preventDefault(); c.stopImmediatePropagation(); if ($(this).hasClass("ui-disabled")) { return } $("#" + $(this).attr("data-button-target")).trigger("confirm", { cancel: false, action: c.target }) }); $(".cancel").click(function (c) { c.preventDefault(); c.stopImmediatePropagation(); if ($(this).hasClass("ui-disabled")) { return } TSM_Return($(this).attr("data-button-target"), a, "cancel") }); $(".leaveApplication").click(function (c) { c.preventDefault(); c.stopImmediatePropagation(); if ($(this).hasClass("ui-disabled")) { return } TSM_LeaveTo($(this).attr("data-button-target"), $(this).attr("data-button-application")) }); MvcControlsToolkit_ParseRegister.add(function (c) { $(c).find(".goto").click(b) }, false) } var TSM_PageChangeOptions = null; $(document).ready(function () { TSM_initButtons(TSM_PageChangeOptions); $("#dateinput").bind("dateselected", function (f, c) { var b = $($(this).data("_returnNode_")); b.text(c); var a = b.attr("id"); a = a.substring(0, a.lastIndexOf("_")); var d = $("#" + a); d.val(c) }); $(".updatetasks").change(function () { var a = $(this); if (a.val() == "-1") { $(".normalRows").hide(); $(".adminRows").show() } else { $(".adminRows").hide(); $(".normalRows").show() } $(".currentprojname").val(a.find("option:selected").text()); MvcControlsToolkit_UpdateDropDownOptions(a.attr("data-action") + "?projectId=" + this.value, $(".dynamictasks"), a.attr("data-prompt"), null, null, TSM_TasksOptionsCallback) }); $(".dynamictasks").change(function () { $(".currentassname").val($(this).find("option:selected").text()); TSM_ConfirmAdd(true) }); $(".dynamicperiods").change(function (a) { TSM_NewPeriod() }); $(".updatetimesheets").change(function () { MvcControlsToolkit_UpdateDropDownOptions($(this).attr("data-action") + "?iset=" + this.value, $(".dynamicperiods"), $(this).attr("data-prompt"), null, null, TSM_PeriodsOptionsCallback) }); $(".updaterowview,  .updatetaskview").change(function () { TSM_View() }); TSM_ConfirmPeriod(true); TSM_View(); TSM_UpdateMainLayout(); $("#basedetail").bind("goto", function (d, c) { var a = $(c.action).attr("data-button-selection"); row_choice_ViewList.Select("property_group_" + a); $("#rowsTitle").text(TSM_DetailTitle(a)); var b = $(c.action).attr("data-row-from"); $("#basedetail").data("chosen-row", b); TSM_CopyFromRow(b) }).bind("confirming", function (b, a) { if (!$("#detailform").validate().form()) { a.cancel = true; return } TSM_ensurePositive(); TSM_CopyToRow($("#basedetail").data("chosen-row")); TSM_UpdateMainLayout(); TSM_formDirty(true) }).bind("cancel", function () { }); $(".allrowsContainer").bind("itemChange", function (b, a) { if (a.ChangeType == "ItemCreated") { TSM_UpdateMainLayout(); TSM_formDirty(true) } else { if (a.ChangeType == "ItemDeleted") { TSM_UpdateMainLayout(); TSM_formDirty(true) } } }) }); $(document).live("pageinit", function (a) { if (a.target.id == "taskselection") { TSM_TasksOptionsCallback($(".dynamictasks")); TSM_ConfirmAdd() } else { if (a.target.id == "periodselection") { TSM_PeriodsOptionsCallback($(".dynamicperiods")) } } }); function TSM_TasksOptionsCallback(a) { if (a[0].options.length > 1) { a.selectmenu("enable") } else { a.selectmenu("disable") } a.selectmenu("refresh"); TSM_ConfirmAdd() } function TSM_ConfirmAdd(b) { var a = $(".dynamictasks").val(); if (a == "") { $(".rowlist").each(function () { $(this).button("disable") }); return } $(".rowlist").each(function () { var c = $(this); var d = "p-" + a + "-" + c.attr("data-button-selection"); if (((a || "") != "") && ($(".currentperiodid").val() != "")) { if ($("." + d).length == 0) { c.button("enable") } else { c.button("disable") } } else { c.button("disable") } }) } var TSM_CurrRowType = null; function TSM_PrepareRowType(a) { TSM_CurrRowType = $(a).attr("data-button-selection") || null; $(".currentrowtype").val(TSM_CurrRowType) } function TSM_PeriodsOptionsCallback(a) { if (a[0].options.length > 0) { a.selectmenu("enable"); $("#btnConfirmPeriod").prop("disabled", false) } else { a.selectmenu("disable"); $("#btnConfirmPeriod").prop("disabled", true) } a.selectmenu("refresh"); TSM_NewPeriod() } function TSM_NewPeriod() { var a = $(".dynamicperiods option:selected").text() || ""; if (a == "") { a = $(".dynamicperiods").attr("data-novalue-message") } $(".newtimesheet").text(a) } function TSM_ConfirmPeriod(b, e) { var c = $(".dynamicperiods option:selected").text() || ""; if (e != null) { c = "" } $("#btnAdd").prop("disabled", c == ""); $("#btnRecallDelete").prop("disabled", true); var a = $(".dynamicperiods"); if (c == "") { $("#btnRecallDelete").prop("disabled", true); $(".currenttimesheet").text(a.attr("data-novalue-message")); $(".currentperiodid").val(""); $(".currentperiodstart").val(""); $(".currentperiodstop").val(""); $(".allTimesheetsEdit").empty(); $(".currentperiodSet").val($(".updatetimesheets").val()); TSM_PrepareDays("", ""); TSM_formDirty(false); if (b == null) { $("#allTimesheetsEdit").empty() } } else { $("#btnRecallDelete").prop("disabled", false); var d = a.val().split("#"); $(".currenttimesheet").text(c); $(".currentperiodid").val(d[0]); $(".currentperiodstart").val(d[1]); $(".currentperiodstop").val(d[2]); TSM_PrepareDays(d[1], parseInt(d[3])); $(".currentperiodSet").val($(".updatetimesheets").val()); if (b == null) { TSM_partialSubmit($("#periodform")) } } } function TSM_ConfirmPeriodCallBack() { history.back(); TSM_formDirty(false); TSM_UpdateMainLayout() } function TSM_UpdateMainLayout() { $(".updatemainlayout").trigger("updatelayout"); $(".combinedValue").each(function () { var a = 0; $("." + this.id).each(function () { var b = $(this).val(); if (b == "") { b = 0 } a += parseInt(b) }); $(this).text(a) }) } function TSM_View() { var c = configuration.get(); var b = ""; var a = ""; if (c.task) { b = $('.updatetaskview option[value="' + c.task + '"]').text() } if (c.row) { a = $('.updaterowview option[value="' + c.row + '"]').text() } if (b) { $(".currenttaskview").text(b) } if (a) { $(".currentrowview").text(a) } if (window._rowViewDescriptions_) { $(".rowViewDescription-o").text(window._rowViewDescriptions_[c.row] || ""); $(".rowViewDescription").text(window._rowViewDescriptions_[$(".updaterowview").val()] || "") } if (window._taskViewDescriptions_) { $(".taskViewDescription-o").text(window._taskViewDescriptions_[c.task] || ""); $(".taskViewDescription").text(window._taskViewDescriptions_[$(".updatetaskview").val()] || "") } } function TSM_ConfirmView() { current = configuration.get(); var a = $(".updaterowview"); var b = $(".updatetaskview"); if (a.length > 0) { current.row = a.val() } if (b.length > 0) { current.task = b.val() } configuration.set(current.row, current.task); if (($(".currentperiodid").val() || "") == "") { history.back(); return } $.mobile.showPageLoadingMsg(); $("#periodform").submit() } function TSM_startAddRow(a) { var b = $(a).attr("data-button-selection") || null; $(".currentrowtype").val(b); TSM_jsonSubmit($("#rowRequest")) } function TSM_CompleteAddRow(d) { TSM_formDirty(true); var f = $(".currentrowtype").val(); var h = TSM_ChooseTemplate(f); var g = $(".innerRowsContainer"); var b = g.attr("data-rows-prefix"); var i = null; var c = g.children(); if (c.length > 0) { i = MvcControlsToolkit_SortableList_AddNewChoice(b, h, c[0]).first() } else { i = MvcControlsToolkit_SortableList_AddNewChoice(b, h).first() } var e = i.attr("id"); var a = e.lastIndexOf("_"); e = e.substring(0, a); TSM_CopyObjectToRow(d, e); $(".p-guid-container").removeClass("p-guid-container").addClass("p-" + d.AssignementId + "-" + f); i.find(".goto").trigger("click") } function TSM_SetRowValue(b, e, k) { if (k == null) { return } b = e + "_" + b; var c = document.getElementById(b); if (c == null) { return } var f = typeof (k); if (f == "boolean") { $(c).val(k ? "True" : "False"); $(b + "_display").text(k ? TSM_Checked : TSM_UnChecked) } else { var d = -1; var e = ""; var l = ""; var h = ""; var j = ""; var g = $("#" + b + "_display"); var a = $(c); var i = g.attr("data-format") || null; if (i == null) { if (f == "string") { d = MvcControlsToolkit_DataType_String } else { if (f == "number") { if (!isNaN(parseInt(k * 1)) && parseInt(k * 1) === k) { d = MvcControlsToolkit_DataType_Int } else { d = MvcControlsToolkit_DataType_Float } } else { if (k instanceof Date) { d = MvcControlsToolkit_DataType_DateTime } } } } else { i = $.parseJSON(i); d = i.type; e = i.prefix; l = i.postfix; h = i.nullstring; j = i.format; if (f == "string" && d > 0) { k = MvcControlsToolkit_Parse(k, d) } } if (g.length > 0) { g.text(MvcControlsToolkit_FormatDisplay(k, j, d, e, l, h)) } if (a.length > 0) { a.val(MvcControlsToolkit_Format(k, "", d, "", "")) } } } function TSM_CopyObjectToRow(d, c) { for (var b in d) { if (b == "DayTimes") { var e = d[b] || null; if (e != null) { for (var a = 0; a < e.length; a++) { TSM_SetRowValue(b + "_" + a + "_", c, e[a]) } } } TSM_SetRowValue(b, c, d[b]) } } function TSM_CopyToRow(a) { $(".detailBoolean").each(function () { var c = $(this); var d = c.prop("checked"); var b = c.attr("id"); $("#" + a + "_" + b).val(d ? "True" : "False"); $("#" + a + "_" + b + "_display").text(d ? TSM_Checked : TSM_UnChecked) }); $(".detailTB").each(function () { var c = $(this); var b = c.attr("id"); if ((c.attr("data-element-type") || "") != "") { b = b.substring(0, b.lastIndexOf("_")); c = $("#" + b) } TSM_SetRowValue(b, a, c.val()) }) } function TSM_ensurePositive() { $(".positive").each(function () { var a = MvcControlsToolkit_TypedTextBox_Get(this, MvcControlsToolkit_DataType_UInt); if (a != null && a < 0) { MvcControlsToolkit_TypedTextBox_Set(this, 0, "", MvcControlsToolkit_DataType_UInt) } if (a != null && $(this).hasClass("dayTime") && a > 24) { MvcControlsToolkit_TypedTextBox_Set(this, 24, "", MvcControlsToolkit_DataType_UInt) } }) } function TSM_CopyFromRow(a) { $(".detailBoolean").each(function () { var c = $(this); var b = c.attr("id"); c.prop("checked", $("#" + a + "_" + b).val() == "True") }); $(".descriptiveDetail").each(function () { var c = $(this); var b = c.attr("id"); c.text($("#" + a + "_" + b).text()) }); $(".detailTB").each(function () { var d = $(this); var b = d.attr("id"); if ((d.attr("data-element-type") || "") != "") { b = b.substring(0, b.lastIndexOf("_")); d = $("#" + b); MvcControlsToolkit_TypedTextBox_SetString(this, $("#" + a + "_" + b).val()); $(this).trigger("pblur") } else { var c = $("#" + a + "_" + b).val(); d.val(c); var e = $("#" + this.id + "_display"); var f = e.attr("data-format") || null; if (f != null) { f = $.parseJSON(f); c = MvcControlsToolkit_Parse(c, f.type); c = MvcControlsToolkit_FormatDisplay(c, f.format, f.type, f.prefix, f.postfix, f.nullstring) } e.text(c) } }) } function TSM_CopySummary(a) { $(".updateerrormessage-d").text($(".updateerrormessage").val() || ""); if (!a) { $(".currstatus-d").text($(".currstatus").val() || ""); $(".currcomments-d").text($(".currcomments").val() || ""); $(".currname-d").text($(".currname").val() || ""); var c; var d; var b; b = $(".currtotalact").val(); c = $(".currtotalact-d"); d = c.attr("data-format") || null; d = $.parseJSON(d); b = MvcControlsToolkit_Parse(b, d.type); b = MvcControlsToolkit_FormatDisplay(b, d.format, d.type, d.prefix || "", d.postfix || "", d.nullstring || ""); c.text(b); b = $(".currtotalovertime").val(); c = $(".currtotalovertime-d"); d = c.attr("data-format") || null; d = $.parseJSON(d); b = MvcControlsToolkit_Parse(b, d.type); b = MvcControlsToolkit_FormatDisplay(b, d.format, d.type, d.prefix || "", d.postfix || "", d.nullstring || ""); c.text(b); b = $(".currtotalnonbill").val(); c = $(".currtotalnonbill-d"); d = c.attr("data-format") || null; d = $.parseJSON(d); b = MvcControlsToolkit_Parse(b, d.type); b = MvcControlsToolkit_FormatDisplay(b, d.format, d.type, d.prefix || "", d.postfix || "", d.nullstring || ""); c.text(b); b = $(".currtotalovertimenonbill").val(); c = $(".currtotalovertimenonbill-d"); d = c.attr("data-format") || null; d = $.parseJSON(d); b = MvcControlsToolkit_Parse(b, d.type); b = MvcControlsToolkit_FormatDisplay(b, d.format, d.type, d.prefix || "", d.postfix || "", d.nullstring || ""); c.text(b) } } function TSM_PrepareDays(c, a) { var b = $("#dayContainer"); if (b.length == 0) { return } var e = b.data("oldStart") || ""; var j = b.data("olddur") || ""; if (c == "" || a == "" || (c == e && a == j)) { return } b.empty(); var k = $("#dayTemplate").html(); var h = ""; var g = MvcControlsToolkit_Parse(c, MvcControlsToolkit_DataType_DateTime); var l = g; var f = 0; while (f < a) { if (f != 0 && f % 2 == 0) { h = h + "</br>" } var d = MvcControlsToolkit_Format(l, "ddd dd/MM", MvcControlsToolkit_DataType_DateTime, "", " "); h = h + k.replace(/_plh_/g, f + "").replace(/_p1lh_/g, d); f++; l = new Date(l.getFullYear(), l.getMonth(), l.getDate() + 1) } $(h).appendTo(b); $.validator.unobtrusive.parseExt("#dayContainer"); $(document).ready(function () { b.find("input:text").focus(function () { $(".detailtoolbar").fixedtoolbar("hide"); var i = this; setTimeout(function () { $(i).select() }) }) }); b.data("oldStart", c); b.data("olddur", a) } MvcControlsToolkit_ParseRegister.add(function (a) { if (a != "#dayContainer") { $(a).trigger("create") } }, false); $.validator.setDefaults({ ignore: "" });